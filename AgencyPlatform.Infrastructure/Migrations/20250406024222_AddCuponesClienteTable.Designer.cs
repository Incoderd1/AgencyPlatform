// <auto-generated />
using System;
using AgencyPlatform.Infrastructure.Data;
using AgencyPlatform.Infrastructure.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AgencyPlatform.Infrastructure.Migrations
{
    [DbContext(typeof(AgencyPlatformDbContext))]
    [Migration("20250406024222_AddCuponesClienteTable")]
    partial class AddCuponesClienteTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.CuponesCliente", b =>
                {
                    b.Property<int>("IdCuponCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_cupon_cliente");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCuponCliente"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("estado_cupon_cliente")
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaAsignacion")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("fecha_asignacion");

                    b.Property<DateTime?>("FechaUso")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("fecha_uso");

                    b.Property<int>("IdCliente")
                        .HasColumnType("integer")
                        .HasColumnName("id_cliente");

                    b.Property<int>("IdCupon")
                        .HasColumnType("integer")
                        .HasColumnName("id_cupon");

                    b.Property<long?>("IdTransaccion")
                        .HasColumnType("bigint")
                        .HasColumnName("id_transaccion");

                    b.Property<int?>("PuntosCanjeados")
                        .HasColumnType("integer")
                        .HasColumnName("puntos_canjeados");

                    b.HasKey("IdCuponCliente");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdCupon");

                    b.ToTable("cupones_cliente", "public");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.acciones_antifrauide", b =>
                {
                    b.Property<int>("id_accion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_accion"));

                    b.Property<int?>("ejecutada_por")
                        .HasColumnType("integer");

                    b.Property<string>("estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasDefaultValueSql("'activa'::character varying");

                    b.Property<string>("evidencia")
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("fecha_accion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("fecha_deteccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("fecha_resolucion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("id_entidad")
                        .HasColumnType("integer");

                    b.Property<string>("ip_relacionada")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<string>("motivo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("tipo_accion")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("tipo_entidad")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("id_accion")
                        .HasName("acciones_antifrauide_pkey");

                    b.HasIndex("ejecutada_por");

                    b.HasIndex(new[] { "tipo_entidad", "id_entidad" }, "idx_antifrauide_entidad");

                    b.HasIndex(new[] { "estado" }, "idx_antifrauide_estado");

                    b.HasIndex(new[] { "tipo_accion" }, "idx_antifrauide_tipo");

                    b.ToTable("acciones_antifrauide", (string)null);
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.actividad_perfile", b =>
                {
                    b.Property<int>("id_actividad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_actividad"));

                    b.Property<DateTime?>("fecha_fin")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fecha_inicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("id_perfil")
                        .HasColumnType("integer");

                    b.Property<string>("ip_registro")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<string>("localizacion")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("notas")
                        .HasColumnType("text");

                    b.Property<string>("tipo_actividad")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("id_actividad")
                        .HasName("actividad_perfiles_pkey");

                    b.HasIndex(new[] { "fecha_inicio", "fecha_fin" }, "idx_actividad_fechas");

                    b.HasIndex(new[] { "id_perfil" }, "idx_actividad_perfil");

                    b.HasIndex(new[] { "tipo_actividad" }, "idx_actividad_tipo");

                    b.ToTable("actividad_perfiles");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.agencia", b =>
                {
                    b.Property<int>("id_agencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_agencia"));

                    b.Property<string>("ciudad")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("codigo_postal")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<string>("direccion")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("documento_verificacion")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("email_contacto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasDefaultValueSql("'pendiente_verificacion'::character varying");

                    b.Property<DateTime>("fecha_actualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("fecha_registro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("fecha_verificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("horario")
                        .HasColumnType("jsonb");

                    b.Property<int>("id_usuario")
                        .HasColumnType("integer");

                    b.Property<string>("logo_url")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("nif_cif")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("nombre_comercial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("num_perfiles_activos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("pais")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("razon_social")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("region")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("sitio_web")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<bool>("verificada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.HasKey("id_agencia")
                        .HasName("agencias_pkey");

                    b.HasIndex("id_usuario");

                    b.HasIndex(new[] { "estado" }, "idx_agencias_estado");

                    b.HasIndex(new[] { "nombre_comercial" }, "idx_agencias_nombre");

                    b.HasIndex(new[] { "pais", "region", "ciudad" }, "idx_agencias_ubicacion");

                    b.HasIndex(new[] { "verificada" }, "idx_agencias_verificada");

                    b.ToTable("agencias");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.cache_consulta", b =>
                {
                    b.Property<int>("id_cache")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_cache"));

                    b.Property<string>("clave_cache")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("datos")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("fecha_expiracion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("parametros_consulta")
                        .HasColumnType("jsonb");

                    b.Property<int>("tiempo_generacion")
                        .HasColumnType("integer");

                    b.Property<string>("tipo_consulta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("ultimo_uso")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("veces_utilizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.HasKey("id_cache")
                        .HasName("cache_consultas_pkey");

                    b.HasIndex(new[] { "clave_cache" }, "idx_cache_clave");

                    b.HasIndex(new[] { "fecha_expiracion" }, "idx_cache_expiracion");

                    b.HasIndex(new[] { "tipo_consulta" }, "idx_cache_tipo");

                    b.ToTable("cache_consultas");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.cliente", b =>
                {
                    b.Property<int>("id_cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_cliente"));

                    b.Property<int?>("edad")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("integer")
                        .HasComputedColumnSql("calcular_edad(fecha_nacimiento)", true);

                    b.Property<bool>("es_vip")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("fecha_actualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateOnly?>("fecha_fin_vip")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("fecha_inicio_vip")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("fecha_nacimiento")
                        .HasColumnType("date");

                    b.Property<DateTime>("fecha_registro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("fidelidad_score")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("genero")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("id_usuario")
                        .HasColumnType("integer");

                    b.Property<string>("intereses")
                        .HasColumnType("jsonb");

                    b.Property<short>("nivel_vip")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.Property<string>("nombre")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("num_logins")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("origen_registro")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("preferencias")
                        .HasColumnType("jsonb");

                    b.Property<int>("puntos_acumulados")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<int>("puntos_caducados")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<int>("puntos_gastados")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("telefono")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("ubicacion_habitual")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("ultima_actividad")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("id_cliente")
                        .HasName("clientes_pkey");

                    b.HasIndex("id_usuario");

                    b.HasIndex(new[] { "ultima_actividad" }, "idx_clientes_actividad");

                    b.HasIndex(new[] { "edad" }, "idx_clientes_edad");

                    b.HasIndex(new[] { "fidelidad_score" }, "idx_clientes_fidelidad");

                    b.HasIndex(new[] { "puntos_acumulados" }, "idx_clientes_puntos");

                    b.HasIndex(new[] { "es_vip", "nivel_vip" }, "idx_clientes_vip");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.config_sharding", b =>
                {
                    b.Property<int>("id_config")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_config"));

                    b.Property<bool>("activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("campo_sharding")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("configuracion_shard")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("fecha_actualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("metodo_sharding")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("numero_shards")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<int>("shard_actual")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("tabla")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("id_config")
                        .HasName("config_sharding_pkey");

                    b.HasIndex(new[] { "activo" }, "idx_sharding_activo");

                    b.HasIndex(new[] { "tabla" }, "uq_config_sharding_tabla")
                        .IsUnique();

                    b.ToTable("config_sharding", (string)null);
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.configuracion_sistema", b =>
                {
                    b.Property<int>("id_config")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_config"));

                    b.Property<int?>("actualizado_por")
                        .HasColumnType("integer");

                    b.Property<string>("clave")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<string>("entorno")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasDefaultValueSql("'all'::character varying");

                    b.Property<DateTime>("fecha_actualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("grupo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasDefaultValueSql("'general'::character varying");

                    b.Property<bool>("modificable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("nivel_cache")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasDefaultValueSql("'medium_term'::character varying");

                    b.Property<int?>("tiempo_expiracion_cache")
                        .HasColumnType("integer");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasDefaultValueSql("'text'::character varying");

                    b.Property<string>("valor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.HasKey("id_config")
                        .HasName("configuracion_sistema_pkey");

                    b.HasIndex("actualizado_por");

                    b.HasIndex(new[] { "clave" }, "configuracion_sistema_clave_key")
                        .IsUnique();

                    b.HasIndex(new[] { "nivel_cache" }, "idx_config_cache");

                    b.HasIndex(new[] { "clave" }, "idx_config_clave");

                    b.HasIndex(new[] { "grupo", "entorno" }, "idx_config_grupo_entorno");

                    b.ToTable("configuracion_sistema", (string)null);
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.contactos_perfil", b =>
                {
                    b.Property<int>("id_contacto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_contacto"));

                    b.Property<string>("email_contacto")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasDefaultValueSql("'pendiente'::character varying");

                    b.Property<DateTime>("fecha_contacto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("fecha_respuesta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("id_cliente")
                        .HasColumnType("integer");

                    b.Property<int>("id_perfil")
                        .HasColumnType("integer");

                    b.Property<string>("ip_contacto")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<string>("mensaje")
                        .HasColumnType("text");

                    b.Property<string>("telefono_contacto")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("tipo_contacto")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("id_contacto")
                        .HasName("contactos_perfil_pkey");

                    b.HasIndex(new[] { "id_cliente" }, "idx_contactos_cliente");

                    b.HasIndex(new[] { "estado" }, "idx_contactos_estado");

                    b.HasIndex(new[] { "fecha_contacto" }, "idx_contactos_fecha");

                    b.HasIndex(new[] { "id_perfil" }, "idx_contactos_perfil");

                    b.ToTable("contactos_perfil", (string)null);
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.cupone", b =>
                {
                    b.Property<int>("id_cupon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_cupon"));

                    b.Property<string>("aplica_a")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasDefaultValueSql("'todo'::character varying");

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<string>("estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasDefaultValueSql("'activo'::character varying");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("fecha_fin")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fecha_inicio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("maximo_descuento")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal?>("minimo_compra")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("requiere_puntos")
                        .HasColumnType("integer");

                    b.Property<string>("tipo_descuento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("usos_actuales")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<int?>("usos_maximos")
                        .HasColumnType("integer");

                    b.Property<int>("usos_por_cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<decimal>("valor")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.HasKey("id_cupon")
                        .HasName("cupones_pkey");

                    b.HasIndex(new[] { "codigo" }, "cupones_codigo_key")
                        .IsUnique();

                    b.HasIndex(new[] { "codigo" }, "idx_cupones_codigo");

                    b.HasIndex(new[] { "estado" }, "idx_cupones_estado");

                    b.HasIndex(new[] { "fecha_inicio", "fecha_fin" }, "idx_cupones_fechas");

                    b.ToTable("cupones");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.dispositivos_usuario", b =>
                {
                    b.Property<int>("id_dispositivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_dispositivo"));

                    b.Property<string>("estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasDefaultValueSql("'activo'::character varying");

                    b.Property<string>("fcm_token")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("fecha_registro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("id_usuario")
                        .HasColumnType("integer");

                    b.Property<string>("ip_ultima_actividad")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<string>("navegador")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("nombre_dispositivo")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("sistema_operativo")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("tipo_dispositivo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("token_dispositivo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("ultima_actividad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("id_dispositivo")
                        .HasName("dispositivos_usuario_pkey");

                    b.HasIndex(new[] { "estado" }, "idx_dispositivos_estado");

                    b.HasIndex(new[] { "token_dispositivo" }, "idx_dispositivos_token");

                    b.HasIndex(new[] { "id_usuario" }, "idx_dispositivos_usuario");

                    b.ToTable("dispositivos_usuario", (string)null);
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.estadisticas_rendimiento", b =>
                {
                    b.Property<int>("id_estadistica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_estadistica"));

                    b.Property<int>("cantidad_registros")
                        .HasColumnType("integer");

                    b.Property<string>("consulta_ejecutada")
                        .HasColumnType("text");

                    b.Property<int?>("consumo_memoria")
                        .HasColumnType("integer");

                    b.Property<DateTime>("fecha_registro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("plan_ejecucion")
                        .HasColumnType("jsonb");

                    b.Property<string>("tabla_afectada")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("tiempo_ejecucion")
                        .HasColumnType("integer");

                    b.Property<string>("tipo_operacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("utilizacion_indices")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.HasKey("id_estadistica")
                        .HasName("estadisticas_rendimiento_pkey");

                    b.HasIndex(new[] { "fecha_registro", "tipo_operacion" }, "idx_estadisticas_fecha_tipo");

                    b.HasIndex(new[] { "tabla_afectada" }, "idx_estadisticas_tabla");

                    b.ToTable("estadisticas_rendimiento", (string)null);
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.feedback_interno", b =>
                {
                    b.Property<int>("id_feedback")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_feedback"));

                    b.Property<string>("comentario")
                        .HasColumnType("text");

                    b.Property<string>("estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasDefaultValueSql("'pendiente'::character varying");

                    b.Property<DateOnly?>("fecha_experiencia")
                        .HasColumnType("date");

                    b.Property<DateTime>("fecha_registro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("id_cliente")
                        .HasColumnType("integer");

                    b.Property<int>("id_perfil")
                        .HasColumnType("integer");

                    b.Property<short>("puntuacion")
                        .HasColumnType("smallint");

                    b.Property<bool>("verificado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("visibilidad")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasDefaultValueSql("'admin'::character varying");

                    b.HasKey("id_feedback")
                        .HasName("feedback_interno_pkey");

                    b.HasIndex(new[] { "id_cliente" }, "idx_feedback_cliente");

                    b.HasIndex(new[] { "id_perfil" }, "idx_feedback_perfil");

                    b.HasIndex(new[] { "puntuacion" }, "idx_feedback_puntuacion");

                    b.ToTable("feedback_interno", (string)null);
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.historial_acceso", b =>
                {
                    b.Property<int>("id_historial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_historial"));

                    b.Property<string>("detalles")
                        .HasColumnType("jsonb");

                    b.Property<bool>("dispositivo_conocido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("fecha_acceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("id_usuario")
                        .HasColumnType("integer");

                    b.Property<string>("ip")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<string>("localizacion_geografica")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("metodo_autenticacion")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("tipo_evento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("user_agent")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("id_historial")
                        .HasName("historial_acceso_pkey");

                    b.HasIndex(new[] { "fecha_acceso" }, "idx_historial_fecha");

                    b.HasIndex(new[] { "tipo_evento" }, "idx_historial_tipo_evento");

                    b.HasIndex(new[] { "id_usuario" }, "idx_historial_usuario");

                    b.ToTable("historial_acceso", (string)null);
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.historial_acceso_actual", b =>
                {
                    b.Property<int>("id_historial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('historial_acceso_particionada_id_historial_seq'::regclass)");

                    b.Property<DateTime>("fecha_acceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("detalles")
                        .HasColumnType("jsonb");

                    b.Property<bool>("dispositivo_conocido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int>("id_usuario")
                        .HasColumnType("integer");

                    b.Property<string>("ip")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<string>("localizacion_geografica")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("metodo_autenticacion")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("tipo_evento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("user_agent")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("id_historial", "fecha_acceso")
                        .HasName("historial_acceso_actual_pkey");

                    b.HasIndex("id_usuario");

                    b.ToTable("historial_acceso_actual", (string)null);
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.historial_acceso_archivo", b =>
                {
                    b.Property<int>("id_historial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('historial_acceso_particionada_id_historial_seq'::regclass)");

                    b.Property<DateTime>("fecha_acceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("detalles")
                        .HasColumnType("jsonb");

                    b.Property<bool>("dispositivo_conocido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int>("id_usuario")
                        .HasColumnType("integer");

                    b.Property<string>("ip")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<string>("localizacion_geografica")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("metodo_autenticacion")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("tipo_evento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("user_agent")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("id_historial", "fecha_acceso")
                        .HasName("historial_acceso_archivo_pkey");

                    b.HasIndex("id_usuario");

                    b.ToTable("historial_acceso_archivo", (string)null);
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.historial_acceso_pasado", b =>
                {
                    b.Property<int>("id_historial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('historial_acceso_particionada_id_historial_seq'::regclass)");

                    b.Property<DateTime>("fecha_acceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("detalles")
                        .HasColumnType("jsonb");

                    b.Property<bool>("dispositivo_conocido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int>("id_usuario")
                        .HasColumnType("integer");

                    b.Property<string>("ip")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<string>("localizacion_geografica")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("metodo_autenticacion")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("tipo_evento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("user_agent")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("id_historial", "fecha_acceso")
                        .HasName("historial_acceso_pasado_pkey");

                    b.HasIndex("id_usuario");

                    b.ToTable("historial_acceso_pasado", (string)null);
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.historial_configuracion", b =>
                {
                    b.Property<int>("id_historial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_historial"));

                    b.Property<DateTime>("fecha_cambio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("id_config")
                        .HasColumnType("integer");

                    b.Property<string>("ip_origen")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<string>("motivo")
                        .HasColumnType("text");

                    b.Property<int?>("realizado_por")
                        .HasColumnType("integer");

                    b.Property<string>("valor_anterior")
                        .HasColumnType("text");

                    b.Property<string>("valor_nuevo")
                        .HasColumnType("text");

                    b.HasKey("id_historial")
                        .HasName("historial_configuracion_pkey");

                    b.HasIndex("realizado_por");

                    b.HasIndex(new[] { "id_config" }, "idx_historial_config");

                    b.HasIndex(new[] { "fecha_cambio" }, "idx_historial_config_fecha");

                    b.ToTable("historial_configuracion", (string)null);
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.historial_verificacione", b =>
                {
                    b.Property<int>("id_historial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_historial"));

                    b.Property<string>("comentario")
                        .HasColumnType("text");

                    b.Property<string>("datos_adicionales")
                        .HasColumnType("jsonb");

                    b.Property<string>("estado_anterior")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("estado_nuevo")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<DateTime>("fecha_cambio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("id_verificacion")
                        .HasColumnType("integer");

                    b.Property<int?>("realizado_por")
                        .HasColumnType("integer");

                    b.Property<int?>("tiempo_en_estado")
                        .HasColumnType("integer");

                    b.HasKey("id_historial")
                        .HasName("historial_verificaciones_pkey");

                    b.HasIndex("realizado_por");

                    b.HasIndex(new[] { "id_verificacion" }, "idx_historial_verificacion");

                    b.HasIndex(new[] { "fecha_cambio" }, "idx_historial_verificacion_fecha");

                    b.ToTable("historial_verificaciones");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.imagenes_perfil", b =>
                {
                    b.Property<int>("id_imagen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_imagen"));

                    b.Property<int>("alto")
                        .HasColumnType("integer");

                    b.Property<int>("ancho")
                        .HasColumnType("integer");

                    b.Property<bool>("contenido_sensible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("es_principal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasDefaultValueSql("'pendiente_revision'::character varying");

                    b.Property<DateTime?>("fecha_revision")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fecha_subida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("hash_imagen")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<int>("id_perfil")
                        .HasColumnType("integer");

                    b.Property<string>("metadata_exif")
                        .HasColumnType("jsonb");

                    b.Property<string>("motivo_rechazo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<short>("nivel_blurring")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.Property<short>("orden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.Property<int?>("revisada_por")
                        .HasColumnType("integer");

                    b.Property<int?>("subida_por")
                        .HasColumnType("integer");

                    b.Property<string>("tags")
                        .HasColumnType("jsonb");

                    b.Property<int>("tamaño_bytes")
                        .HasColumnType("integer");

                    b.Property<string>("tipo_mime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("url_imagen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("url_media")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("url_thumbnail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("url_webp")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid>("uuid_imagen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.HasKey("id_imagen")
                        .HasName("imagenes_perfil_pkey");

                    b.HasIndex("revisada_por");

                    b.HasIndex("subida_por");

                    b.HasIndex(new[] { "estado", "fecha_subida" }, "idx_imagenes_estado_fecha");

                    b.HasIndex(new[] { "hash_imagen" }, "idx_imagenes_hash");

                    b.HasIndex(new[] { "id_perfil", "orden" }, "idx_imagenes_perfil_orden");

                    b.HasIndex(new[] { "id_perfil", "es_principal" }, "idx_imagenes_principal");

                    b.HasIndex(new[] { "uuid_imagen" }, "idx_imagenes_uuid");

                    b.ToTable("imagenes_perfil", (string)null);
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.logs_sistema", b =>
                {
                    b.Property<int>("id_log")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_log"));

                    b.Property<string>("codigo_error")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("datos")
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("fecha_log")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("hash_identificador")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<int?>("id_usuario")
                        .HasColumnType("integer");

                    b.Property<string>("ip")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<int?>("memoria_utilizada")
                        .HasColumnType("integer");

                    b.Property<string>("mensaje")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("modulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<short>("nivel_severidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)1);

                    b.Property<string>("submodulo")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("tiempo_procesamiento")
                        .HasColumnType("integer");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("user_agent")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("id_log")
                        .HasName("logs_sistema_pkey");

                    b.HasIndex("id_usuario");

                    b.HasIndex(new[] { "fecha_log", "tipo" }, "idx_logs_fecha_tipo");

                    b.HasIndex(new[] { "hash_identificador" }, "idx_logs_hash");

                    b.HasIndex(new[] { "modulo", "submodulo" }, "idx_logs_modulo_submodulo");

                    b.HasIndex(new[] { "tipo", "nivel_severidad" }, "idx_logs_tipo_severidad");

                    b.ToTable("logs_sistema", (string)null);
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.logs_sistema_actual", b =>
                {
                    b.Property<int>("id_log")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('logs_sistema_particionado_id_log_seq'::regclass)");

                    b.Property<DateTime>("fecha_log")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("codigo_error")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("datos")
                        .HasColumnType("jsonb");

                    b.Property<string>("hash_identificador")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<int?>("id_usuario")
                        .HasColumnType("integer");

                    b.Property<string>("ip")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<int?>("memoria_utilizada")
                        .HasColumnType("integer");

                    b.Property<string>("mensaje")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("modulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<short>("nivel_severidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)1);

                    b.Property<string>("submodulo")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("tiempo_procesamiento")
                        .HasColumnType("integer");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("user_agent")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("id_log", "fecha_log")
                        .HasName("logs_sistema_actual_pkey");

                    b.HasIndex("id_usuario");

                    b.ToTable("logs_sistema_actual", (string)null);
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.logs_sistema_antiguo", b =>
                {
                    b.Property<int>("id_log")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('logs_sistema_particionado_id_log_seq'::regclass)");

                    b.Property<DateTime>("fecha_log")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("codigo_error")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("datos")
                        .HasColumnType("jsonb");

                    b.Property<string>("hash_identificador")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<int?>("id_usuario")
                        .HasColumnType("integer");

                    b.Property<string>("ip")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<int?>("memoria_utilizada")
                        .HasColumnType("integer");

                    b.Property<string>("mensaje")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("modulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<short>("nivel_severidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)1);

                    b.Property<string>("submodulo")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("tiempo_procesamiento")
                        .HasColumnType("integer");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("user_agent")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("id_log", "fecha_log")
                        .HasName("logs_sistema_antiguo_pkey");

                    b.HasIndex("id_usuario");

                    b.ToTable("logs_sistema_antiguo", (string)null);
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.logs_sistema_archivo", b =>
                {
                    b.Property<int>("id_log")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('logs_sistema_particionado_id_log_seq'::regclass)");

                    b.Property<DateTime>("fecha_log")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("codigo_error")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("datos")
                        .HasColumnType("jsonb");

                    b.Property<string>("hash_identificador")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<int?>("id_usuario")
                        .HasColumnType("integer");

                    b.Property<string>("ip")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<int?>("memoria_utilizada")
                        .HasColumnType("integer");

                    b.Property<string>("mensaje")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("modulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<short>("nivel_severidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)1);

                    b.Property<string>("submodulo")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("tiempo_procesamiento")
                        .HasColumnType("integer");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("user_agent")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("id_log", "fecha_log")
                        .HasName("logs_sistema_archivo_pkey");

                    b.HasIndex("id_usuario");

                    b.ToTable("logs_sistema_archivo", (string)null);
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.logs_sistema_reciente", b =>
                {
                    b.Property<int>("id_log")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('logs_sistema_particionado_id_log_seq'::regclass)");

                    b.Property<DateTime>("fecha_log")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("codigo_error")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("datos")
                        .HasColumnType("jsonb");

                    b.Property<string>("hash_identificador")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<int?>("id_usuario")
                        .HasColumnType("integer");

                    b.Property<string>("ip")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<int?>("memoria_utilizada")
                        .HasColumnType("integer");

                    b.Property<string>("mensaje")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("modulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<short>("nivel_severidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)1);

                    b.Property<string>("submodulo")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("tiempo_procesamiento")
                        .HasColumnType("integer");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("user_agent")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("id_log", "fecha_log")
                        .HasName("logs_sistema_reciente_pkey");

                    b.HasIndex("id_usuario");

                    b.ToTable("logs_sistema_reciente", (string)null);
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.membresias_vip", b =>
                {
                    b.Property<int>("id_plan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_plan"));

                    b.Property<string>("beneficios")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<short>("descuentos_adicionales")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.Property<string>("estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasDefaultValueSql("'activo'::character varying");

                    b.Property<DateTime>("fecha_actualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal?>("precio_anual")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("precio_mensual")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal?>("precio_trimestral")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<int>("puntos_mensuales")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<short>("reduccion_anuncios")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.HasKey("id_plan")
                        .HasName("membresias_vip_pkey");

                    b.HasIndex(new[] { "estado" }, "idx_membresias_estado");

                    b.ToTable("membresias_vip", (string)null);
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.metricas_perfil", b =>
                {
                    b.Property<int>("id_metrica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_metrica"));

                    b.Property<int>("contactos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<DateOnly>("fecha")
                        .HasColumnType("date");

                    b.Property<int>("id_perfil")
                        .HasColumnType("integer");

                    b.Property<int>("posicion_ranking")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("tendencia")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasDefaultValueSql("'estable'::character varying");

                    b.Property<decimal>("tiempo_promedio")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<int>("visitas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.HasKey("id_metrica")
                        .HasName("metricas_perfil_pkey");

                    b.HasIndex(new[] { "id_perfil", "fecha" }, "uq_metrica_perfil_fecha")
                        .IsUnique();

                    b.ToTable("metricas_perfil", (string)null);
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.perfile", b =>
                {
                    b.Property<int>("id_perfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_perfil"));

                    b.Property<short?>("altura")
                        .HasColumnType("smallint");

                    b.Property<string>("color_cabello")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("color_ojos")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<bool>("destacado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("dispone_local")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("disponibilidad")
                        .HasColumnType("jsonb");

                    b.Property<bool>("disponible_24h")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("disponible_para")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasDefaultValueSql("'todos'::character varying");

                    b.Property<short>("edad")
                        .HasColumnType("smallint");

                    b.Property<string>("email_contacto")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("es_independiente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasDefaultValueSql("'pendiente'::character varying");

                    b.Property<DateTime>("fecha_actualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateOnly?>("fecha_fin_destacado")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("fecha_inicio_destacado")
                        .HasColumnType("date");

                    b.Property<DateTime>("fecha_registro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("fecha_verificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("genero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<bool>("hace_salidas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int?>("id_agencia")
                        .HasColumnType("integer");

                    b.Property<int?>("id_usuario")
                        .HasColumnType("integer");

                    b.Property<string>("idiomas")
                        .HasColumnType("jsonb");

                    b.Property<string>("medidas")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("nacionalidad")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("nivel_popularidad")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasDefaultValueSql("'bajo'::character varying");

                    b.Property<string>("nombre_perfil")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<long>("num_contactos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<long>("num_visitas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<short?>("peso")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("puntuacion_interna")
                        .HasPrecision(3, 2)
                        .HasColumnType("numeric(3,2)");

                    b.Property<int?>("quien_verifico")
                        .HasColumnType("integer");

                    b.Property<string>("servicios")
                        .HasColumnType("jsonb");

                    b.Property<string>("tarifas")
                        .HasColumnType("jsonb");

                    b.Property<string>("telefono_contacto")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("ubicacion_ciudad")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ubicacion_zona")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("ultimo_online")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("verificado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("whatsapp")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("id_perfil")
                        .HasName("perfiles_pkey");

                    b.HasIndex("id_agencia");

                    b.HasIndex("id_usuario");

                    b.HasIndex("quien_verifico");

                    b.HasIndex(new[] { "destacado" }, "idx_perfiles_destacado");

                    b.HasIndex(new[] { "estado" }, "idx_perfiles_estado");

                    b.HasIndex(new[] { "genero" }, "idx_perfiles_genero");

                    b.HasIndex(new[] { "es_independiente" }, "idx_perfiles_independiente");

                    b.HasIndex(new[] { "nombre_perfil" }, "idx_perfiles_nombre");

                    b.HasIndex(new[] { "nivel_popularidad" }, "idx_perfiles_popularidad");

                    b.HasIndex(new[] { "ubicacion_ciudad", "ubicacion_zona" }, "idx_perfiles_ubicacion");

                    b.HasIndex(new[] { "ultimo_online" }, "idx_perfiles_ultimo_online");

                    b.HasIndex(new[] { "verificado" }, "idx_perfiles_verificado");

                    b.ToTable("perfiles");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.procesamiento_imagene", b =>
                {
                    b.Property<int>("id_procesamiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_procesamiento"));

                    b.Property<DateTime>("fecha_procesamiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("id_imagen")
                        .HasColumnType("integer");

                    b.Property<string>("parametros_procesamiento")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("procesado_por")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("tipo_procesamiento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("url_resultado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("id_procesamiento")
                        .HasName("procesamiento_imagenes_pkey");

                    b.HasIndex(new[] { "id_imagen" }, "idx_procesamiento_imagen");

                    b.HasIndex(new[] { "tipo_procesamiento" }, "idx_procesamiento_tipo");

                    b.ToTable("procesamiento_imagenes");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.punto", b =>
                {
                    b.Property<int>("id_punto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_punto"));

                    b.Property<int>("cantidad")
                        .HasColumnType("integer");

                    b.Property<string>("descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasDefaultValueSql("'activo'::character varying");

                    b.Property<DateTime?>("fecha_expiracion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fecha_obtencion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("id_cliente")
                        .HasColumnType("integer");

                    b.Property<long?>("id_referencia")
                        .HasColumnType("bigint");

                    b.Property<decimal>("multiplicador")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3, 2)
                        .HasColumnType("numeric(3,2)")
                        .HasDefaultValueSql("1.00");

                    b.Property<string>("tipo_accion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("tipo_referencia")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("id_punto")
                        .HasName("puntos_pkey");

                    b.HasIndex(new[] { "id_cliente" }, "idx_puntos_cliente");

                    b.HasIndex(new[] { "estado" }, "idx_puntos_estado");

                    b.HasIndex(new[] { "fecha_expiracion" }, "idx_puntos_fecha_exp");

                    b.HasIndex(new[] { "tipo_accion" }, "idx_puntos_tipo_accion");

                    b.ToTable("puntos");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.resumen_historico_visita", b =>
                {
                    b.Property<int>("id_resumen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_resumen"));

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("id_perfil")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("periodo_fin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("periodo_inicio")
                        .HasColumnType("date");

                    b.Property<decimal>("tiempo_promedio")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<int>("total_contactos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<int>("total_visitas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.HasKey("id_resumen")
                        .HasName("resumen_historico_visitas_pkey");

                    b.HasIndex(new[] { "periodo_inicio", "periodo_fin" }, "idx_resumen_periodo");

                    b.HasIndex(new[] { "id_perfil", "periodo_inicio", "periodo_fin" }, "uq_resumen_perfil_periodo")
                        .IsUnique();

                    b.ToTable("resumen_historico_visitas");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.suscripciones_vip", b =>
                {
                    b.Property<int>("id_suscripcion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_suscripcion"));

                    b.Property<bool>("auto_renovacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("cupon_aplicado")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("datos_pago")
                        .HasColumnType("jsonb");

                    b.Property<DateTime?>("efectiva_hasta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasDefaultValueSql("'pendiente'::character varying");

                    b.Property<DateTime?>("fecha_cancelacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fecha_fin")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fecha_inicio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("fecha_proximo_cargo")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("fecha_renovacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("fecha_ultimo_intento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("gateway_pago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("ha_recibido_recordatorio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int>("id_cliente")
                        .HasColumnType("integer");

                    b.Property<string>("id_cliente_gateway")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("id_plan")
                        .HasColumnType("integer");

                    b.Property<string>("id_suscripcion_gateway")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("id_transaccion_pago")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("impuestos")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasDefaultValueSql("0.00");

                    b.Property<int>("intentos_cobro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("metodo_pago")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("moneda")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("character(3)")
                        .HasDefaultValueSql("'USD'::bpchar")
                        .IsFixedLength();

                    b.Property<decimal>("monto_base")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("monto_descuento")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasDefaultValueSql("0.00");

                    b.Property<decimal>("monto_pagado")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<string>("motivo_cancelacion")
                        .HasColumnType("text");

                    b.Property<string>("notas_internas")
                        .HasColumnType("text");

                    b.Property<string>("numero_suscripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("origen_suscripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasDefaultValueSql("'web'::character varying");

                    b.Property<string>("referencia_pago")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("solicitada_por")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasDefaultValueSql("'cliente'::character varying");

                    b.Property<string>("tipo_ciclo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("id_suscripcion")
                        .HasName("suscripciones_vip_pkey");

                    b.HasIndex("id_plan");

                    b.HasIndex(new[] { "id_cliente" }, "idx_suscripciones_cliente");

                    b.HasIndex(new[] { "estado", "fecha_proximo_cargo" }, "idx_suscripciones_cobro");

                    b.HasIndex(new[] { "estado" }, "idx_suscripciones_estado");

                    b.HasIndex(new[] { "fecha_inicio", "fecha_fin", "fecha_renovacion", "fecha_proximo_cargo" }, "idx_suscripciones_fechas");

                    b.HasIndex(new[] { "gateway_pago", "id_suscripcion_gateway" }, "idx_suscripciones_gateway");

                    b.HasIndex(new[] { "numero_suscripcion" }, "idx_suscripciones_numero");

                    b.HasIndex(new[] { "numero_suscripcion" }, "suscripciones_vip_numero_suscripcion_key")
                        .IsUnique();

                    b.ToTable("suscripciones_vip", (string)null);
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.usuario", b =>
                {
                    b.Property<int>("id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_usuario"));

                    b.Property<bool>("acepto_marketing")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("auth_id")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("bloqueo_temporal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("cambio_contraseña_requerido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("contrasena")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("datos_eliminacion")
                        .HasColumnType("jsonb");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasDefaultValueSql("'pendiente'::character varying");

                    b.Property<bool>("factor_2fa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("fecha_actualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("fecha_bloqueo")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("fecha_expiracion_token")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fecha_registro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("fecha_suspension")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("fecha_ultimo_cambio_contraseña")
                        .HasColumnType("timestamp without time zone");

                    b.Property<short>("intentos_fallidos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.Property<string>("ip_registro")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<string>("metodo_auth")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasDefaultValueSql("'password'::character varying");

                    b.Property<string>("motivo_suspension")
                        .HasColumnType("text");

                    b.Property<string>("permisos")
                        .HasColumnType("jsonb");

                    b.Property<string>("salt")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("secreto_2fa")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("tipo_usuario")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("token_verificacion")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("ultima_actividad")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ultimo_ip")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<DateTime?>("ultimo_login")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("ultimo_terminos_aceptados")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<bool>("verificado_email")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.HasKey("id_usuario")
                        .HasName("usuarios_pkey");

                    b.HasIndex(new[] { "ultima_actividad", "estado" }, "idx_actividad");

                    b.HasIndex(new[] { "metodo_auth", "auth_id" }, "idx_auth");

                    b.HasIndex(new[] { "email" }, "idx_email");

                    b.HasIndex(new[] { "estado" }, "idx_estado");

                    b.HasIndex(new[] { "tipo_usuario" }, "idx_tipo_usuario");

                    b.HasIndex(new[] { "uuid" }, "idx_uuid");

                    b.HasIndex(new[] { "email" }, "usuarios_email_key")
                        .IsUnique();

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.verificacione", b =>
                {
                    b.Property<int>("id_verificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_verificacion"));

                    b.Property<string>("checklist_verificacion")
                        .HasColumnType("jsonb");

                    b.Property<string>("codigo_verificacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("documentos_hash")
                        .HasColumnType("jsonb");

                    b.Property<string>("documentos_url")
                        .HasColumnType("jsonb");

                    b.Property<string>("estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasDefaultValueSql("'pendiente'::character varying");

                    b.Property<DateTime?>("fecha_asignacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateOnly?>("fecha_caducidad_documentos")
                        .HasColumnType("date");

                    b.Property<DateTime>("fecha_solicitud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("fecha_ultima_actualizacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("fecha_verificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("historial_estados")
                        .HasColumnType("jsonb");

                    b.Property<int>("id_entidad")
                        .HasColumnType("integer");

                    b.Property<int?>("id_transaccion")
                        .HasColumnType("integer");

                    b.Property<string>("metodo_pago")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("moneda")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("character(3)")
                        .HasDefaultValueSql("'USD'::bpchar")
                        .IsFixedLength();

                    b.Property<decimal?>("monto_pagado")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<string>("motivo_rechazo")
                        .HasColumnType("text");

                    b.Property<short>("nivel_verificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)1);

                    b.Property<string>("notas_admin")
                        .HasColumnType("text");

                    b.Property<string>("notas_internas")
                        .HasColumnType("text");

                    b.Property<string>("origen_solicitud")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("pago_recibido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("prioridad")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasDefaultValueSql("'normal'::character varying");

                    b.Property<decimal?>("puntuacion_riesgo")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)");

                    b.Property<bool>("recordatorio_enviado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("renovacion_automatica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("sugerencias_correccion")
                        .HasColumnType("text");

                    b.Property<int?>("tiempo_proceso")
                        .HasColumnType("integer");

                    b.Property<string>("tipo_entidad")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<DateTime?>("valido_desde")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("valido_hasta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("verificado_por")
                        .HasColumnType("integer");

                    b.HasKey("id_verificacion")
                        .HasName("verificaciones_pkey");

                    b.HasIndex("verificado_por");

                    b.HasIndex(new[] { "codigo_verificacion" }, "idx_verificaciones_codigo");

                    b.HasIndex(new[] { "tipo_entidad", "id_entidad" }, "idx_verificaciones_entidad");

                    b.HasIndex(new[] { "estado", "prioridad" }, "idx_verificaciones_estado_prioridad");

                    b.HasIndex(new[] { "fecha_solicitud", "valido_hasta" }, "idx_verificaciones_fechas");

                    b.HasIndex(new[] { "valido_hasta", "renovacion_automatica" }, "idx_verificaciones_renovacion");

                    b.HasIndex(new[] { "codigo_verificacion" }, "verificaciones_codigo_verificacion_key")
                        .IsUnique();

                    b.ToTable("verificaciones");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.visitas_perfil", b =>
                {
                    b.Property<int>("id_visita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_visita"));

                    b.Property<string>("dispositivo")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<DateTime>("fecha_visita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("id_cliente")
                        .HasColumnType("integer");

                    b.Property<int>("id_perfil")
                        .HasColumnType("integer");

                    b.Property<string>("ip_visitante")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<string>("origen")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("region_geografica")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("tiempo_visita")
                        .HasColumnType("integer");

                    b.Property<string>("user_agent")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("id_visita")
                        .HasName("visitas_perfil_pkey");

                    b.HasIndex(new[] { "id_cliente" }, "idx_visitas_cliente");

                    b.HasIndex(new[] { "fecha_visita", "dispositivo" }, "idx_visitas_fecha_dispositivo");

                    b.HasIndex(new[] { "id_perfil", "fecha_visita" }, "idx_visitas_perfil_fecha");

                    b.ToTable("visitas_perfil", (string)null);
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.visitas_perfil_actual", b =>
                {
                    b.Property<int>("id_visita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('visitas_perfil_particionada_id_visita_seq'::regclass)");

                    b.Property<DateTime>("fecha_visita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("dispositivo")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int?>("id_cliente")
                        .HasColumnType("integer");

                    b.Property<int>("id_perfil")
                        .HasColumnType("integer");

                    b.Property<string>("ip_visitante")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<string>("origen")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("region_geografica")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("tiempo_visita")
                        .HasColumnType("integer");

                    b.Property<string>("user_agent")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("id_visita", "fecha_visita")
                        .HasName("visitas_perfil_actual_pkey");

                    b.HasIndex("id_cliente");

                    b.HasIndex("id_perfil");

                    b.ToTable("visitas_perfil_actual", (string)null);
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.visitas_perfil_antiguo", b =>
                {
                    b.Property<int>("id_visita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('visitas_perfil_particionada_id_visita_seq'::regclass)");

                    b.Property<DateTime>("fecha_visita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("dispositivo")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int?>("id_cliente")
                        .HasColumnType("integer");

                    b.Property<int>("id_perfil")
                        .HasColumnType("integer");

                    b.Property<string>("ip_visitante")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<string>("origen")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("region_geografica")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("tiempo_visita")
                        .HasColumnType("integer");

                    b.Property<string>("user_agent")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("id_visita", "fecha_visita")
                        .HasName("visitas_perfil_antiguos_pkey");

                    b.HasIndex("id_cliente");

                    b.HasIndex("id_perfil");

                    b.ToTable("visitas_perfil_antiguos");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.CuponesCliente", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cliente");

                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.cupone", "Cupon")
                        .WithMany()
                        .HasForeignKey("IdCupon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cupon");

                    b.Navigation("Cliente");

                    b.Navigation("Cupon");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.acciones_antifrauide", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.usuario", "ejecutada_porNavigation")
                        .WithMany("AccionesAntifrauides")
                        .HasForeignKey("ejecutada_por")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("acciones_antifrauide_ejecutada_por_fkey");

                    b.Navigation("ejecutada_porNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.actividad_perfile", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.perfile", "id_perfilNavigation")
                        .WithMany("actividad_perfiles")
                        .HasForeignKey("id_perfil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("actividad_perfiles_id_perfil_fkey");

                    b.Navigation("id_perfilNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.agencia", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.usuario", "id_usuario_navigation")
                        .WithMany("agencia")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("agencias_id_usuario_fkey");

                    b.Navigation("id_usuario_navigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.cliente", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.usuario", "id_usuario_navigation")
                        .WithMany("clientes")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("clientes_id_usuario_fkey");

                    b.Navigation("id_usuario_navigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.configuracion_sistema", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.usuario", "actualizado_porNavigation")
                        .WithMany("configuracion_sistemas")
                        .HasForeignKey("actualizado_por")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("configuracion_sistema_actualizado_por_fkey");

                    b.Navigation("actualizado_porNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.contactos_perfil", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.cliente", "id_clienteNavigation")
                        .WithMany("contactos_perfils")
                        .HasForeignKey("id_cliente")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("contactos_perfil_id_cliente_fkey");

                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.perfile", "id_perfilNavigation")
                        .WithMany("contactos_perfils")
                        .HasForeignKey("id_perfil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("contactos_perfil_id_perfil_fkey");

                    b.Navigation("id_clienteNavigation");

                    b.Navigation("id_perfilNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.dispositivos_usuario", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.usuario", "id_usuarioNavigation")
                        .WithMany("dispositivos_usuarios")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("dispositivos_usuario_id_usuario_fkey");

                    b.Navigation("id_usuarioNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.feedback_interno", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.cliente", "id_clienteNavigation")
                        .WithMany("feedback_internos")
                        .HasForeignKey("id_cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("feedback_interno_id_cliente_fkey");

                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.perfile", "id_perfilNavigation")
                        .WithMany("feedback_internos")
                        .HasForeignKey("id_perfil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("feedback_interno_id_perfil_fkey");

                    b.Navigation("id_clienteNavigation");

                    b.Navigation("id_perfilNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.historial_acceso", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.usuario", "id_usuarioNavigation")
                        .WithMany("historial_accesos")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("historial_acceso_id_usuario_fkey");

                    b.Navigation("id_usuarioNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.historial_acceso_actual", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.usuario", "id_usuarioNavigation")
                        .WithMany("historial_acceso_actuals")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("historial_acceso_particionada_id_usuario_fkey");

                    b.Navigation("id_usuarioNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.historial_acceso_archivo", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.usuario", "id_usuarioNavigation")
                        .WithMany("historial_acceso_archivos")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("historial_acceso_particionada_id_usuario_fkey");

                    b.Navigation("id_usuarioNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.historial_acceso_pasado", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.usuario", "id_usuarioNavigation")
                        .WithMany("historial_acceso_pasados")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("historial_acceso_particionada_id_usuario_fkey");

                    b.Navigation("id_usuarioNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.historial_configuracion", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.configuracion_sistema", "id_configNavigation")
                        .WithMany("historial_configuracions")
                        .HasForeignKey("id_config")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("historial_configuracion_id_config_fkey");

                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.usuario", "realizado_porNavigation")
                        .WithMany("historial_configuracions")
                        .HasForeignKey("realizado_por")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("historial_configuracion_realizado_por_fkey");

                    b.Navigation("id_configNavigation");

                    b.Navigation("realizado_porNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.historial_verificacione", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.verificacione", "id_verificacionNavigation")
                        .WithMany("historial_verificaciones")
                        .HasForeignKey("id_verificacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("historial_verificaciones_id_verificacion_fkey");

                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.usuario", "realizado_porNavigation")
                        .WithMany("historial_verificaciones")
                        .HasForeignKey("realizado_por")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("historial_verificaciones_realizado_por_fkey");

                    b.Navigation("id_verificacionNavigation");

                    b.Navigation("realizado_porNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.imagenes_perfil", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.perfile", "id_perfilNavigation")
                        .WithMany("imagenes_perfils")
                        .HasForeignKey("id_perfil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("imagenes_perfil_id_perfil_fkey");

                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.usuario", "revisada_porNavigation")
                        .WithMany("imagenes_perfil_revisada_por_navigations")
                        .HasForeignKey("revisada_por")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("imagenes_perfil_revisada_por_fkey");

                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.usuario", "subida_porNavigation")
                        .WithMany("imagenes_perfil_subida_por_navigations")
                        .HasForeignKey("subida_por")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("imagenes_perfil_subida_por_fkey");

                    b.Navigation("id_perfilNavigation");

                    b.Navigation("revisada_porNavigation");

                    b.Navigation("subida_porNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.logs_sistema", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.usuario", "id_usuarioNavigation")
                        .WithMany("logs_sistemas")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("logs_sistema_id_usuario_fkey");

                    b.Navigation("id_usuarioNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.logs_sistema_actual", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.usuario", "id_usuarioNavigation")
                        .WithMany("logs_sistema_actuals")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("logs_sistema_particionado_id_usuario_fkey");

                    b.Navigation("id_usuarioNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.logs_sistema_antiguo", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.usuario", "id_usuarioNavigation")
                        .WithMany("logs_sistema_antiguos")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("logs_sistema_particionado_id_usuario_fkey");

                    b.Navigation("id_usuarioNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.logs_sistema_archivo", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.usuario", "id_usuarioNavigation")
                        .WithMany("logs_sistema_archivos")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("logs_sistema_particionado_id_usuario_fkey");

                    b.Navigation("id_usuarioNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.logs_sistema_reciente", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.usuario", "id_usuarioNavigation")
                        .WithMany("logs_sistema_recientes")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("logs_sistema_particionado_id_usuario_fkey");

                    b.Navigation("id_usuarioNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.metricas_perfil", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.perfile", "id_perfilNavigation")
                        .WithMany("metricas_perfils")
                        .HasForeignKey("id_perfil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("metricas_perfil_id_perfil_fkey");

                    b.Navigation("id_perfilNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.perfile", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.agencia", "id_agencia_navigation")
                        .WithMany("perfile_id_agencia_navigations")
                        .HasForeignKey("id_agencia")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("perfiles_id_agencia_fkey");

                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.usuario", "id_usuario_navigation")
                        .WithMany("perfiles")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("perfiles_id_usuario_fkey");

                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.agencia", "quien_verifico_navigation")
                        .WithMany("perfile_quien_verifico_navigations")
                        .HasForeignKey("quien_verifico")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("perfiles_quien_verifico_fkey");

                    b.Navigation("id_agencia_navigation");

                    b.Navigation("id_usuario_navigation");

                    b.Navigation("quien_verifico_navigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.procesamiento_imagene", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.imagenes_perfil", "id_imagenNavigation")
                        .WithMany("procesamiento_imagenes")
                        .HasForeignKey("id_imagen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("procesamiento_imagenes_id_imagen_fkey");

                    b.Navigation("id_imagenNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.punto", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.cliente", "id_clienteNavigation")
                        .WithMany("puntos")
                        .HasForeignKey("id_cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("puntos_id_cliente_fkey");

                    b.Navigation("id_clienteNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.resumen_historico_visita", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.perfile", "id_perfilNavigation")
                        .WithMany("resumen_historico_visita")
                        .HasForeignKey("id_perfil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("resumen_historico_visitas_id_perfil_fkey");

                    b.Navigation("id_perfilNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.suscripciones_vip", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.cliente", "id_clienteNavigation")
                        .WithMany("suscripciones_vips")
                        .HasForeignKey("id_cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("suscripciones_vip_id_cliente_fkey");

                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.membresias_vip", "id_planNavigation")
                        .WithMany("suscripciones_vips")
                        .HasForeignKey("id_plan")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("suscripciones_vip_id_plan_fkey");

                    b.Navigation("id_clienteNavigation");

                    b.Navigation("id_planNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.verificacione", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.usuario", "verificado_porNavigation")
                        .WithMany("verificaciones")
                        .HasForeignKey("verificado_por")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("verificaciones_verificado_por_fkey");

                    b.Navigation("verificado_porNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.visitas_perfil", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.cliente", "id_clienteNavigation")
                        .WithMany("visitas_perfils")
                        .HasForeignKey("id_cliente")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("visitas_perfil_id_cliente_fkey");

                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.perfile", "id_perfilNavigation")
                        .WithMany("visitas_perfils")
                        .HasForeignKey("id_perfil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("visitas_perfil_id_perfil_fkey");

                    b.Navigation("id_clienteNavigation");

                    b.Navigation("id_perfilNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.visitas_perfil_actual", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.cliente", "id_clienteNavigation")
                        .WithMany("visitas_perfil_actuals")
                        .HasForeignKey("id_cliente")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("visitas_perfil_particionada_id_cliente_fkey");

                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.perfile", "id_perfilNavigation")
                        .WithMany("visitas_perfil_actuals")
                        .HasForeignKey("id_perfil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("visitas_perfil_particionada_id_perfil_fkey");

                    b.Navigation("id_clienteNavigation");

                    b.Navigation("id_perfilNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.visitas_perfil_antiguo", b =>
                {
                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.cliente", "id_clienteNavigation")
                        .WithMany("visitas_perfil_antiguos")
                        .HasForeignKey("id_cliente")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("visitas_perfil_particionada_id_cliente_fkey");

                    b.HasOne("AgencyPlatform.Infrastructure.Data.Entities.perfile", "id_perfilNavigation")
                        .WithMany("visitas_perfil_antiguos")
                        .HasForeignKey("id_perfil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("visitas_perfil_particionada_id_perfil_fkey");

                    b.Navigation("id_clienteNavigation");

                    b.Navigation("id_perfilNavigation");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.agencia", b =>
                {
                    b.Navigation("perfile_id_agencia_navigations");

                    b.Navigation("perfile_quien_verifico_navigations");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.cliente", b =>
                {
                    b.Navigation("contactos_perfils");

                    b.Navigation("feedback_internos");

                    b.Navigation("puntos");

                    b.Navigation("suscripciones_vips");

                    b.Navigation("visitas_perfil_actuals");

                    b.Navigation("visitas_perfil_antiguos");

                    b.Navigation("visitas_perfils");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.configuracion_sistema", b =>
                {
                    b.Navigation("historial_configuracions");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.imagenes_perfil", b =>
                {
                    b.Navigation("procesamiento_imagenes");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.membresias_vip", b =>
                {
                    b.Navigation("suscripciones_vips");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.perfile", b =>
                {
                    b.Navigation("actividad_perfiles");

                    b.Navigation("contactos_perfils");

                    b.Navigation("feedback_internos");

                    b.Navigation("imagenes_perfils");

                    b.Navigation("metricas_perfils");

                    b.Navigation("resumen_historico_visita");

                    b.Navigation("visitas_perfil_actuals");

                    b.Navigation("visitas_perfil_antiguos");

                    b.Navigation("visitas_perfils");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.usuario", b =>
                {
                    b.Navigation("AccionesAntifrauides");

                    b.Navigation("agencia");

                    b.Navigation("clientes");

                    b.Navigation("configuracion_sistemas");

                    b.Navigation("dispositivos_usuarios");

                    b.Navigation("historial_acceso_actuals");

                    b.Navigation("historial_acceso_archivos");

                    b.Navigation("historial_acceso_pasados");

                    b.Navigation("historial_accesos");

                    b.Navigation("historial_configuracions");

                    b.Navigation("historial_verificaciones");

                    b.Navigation("imagenes_perfil_revisada_por_navigations");

                    b.Navigation("imagenes_perfil_subida_por_navigations");

                    b.Navigation("logs_sistema_actuals");

                    b.Navigation("logs_sistema_antiguos");

                    b.Navigation("logs_sistema_archivos");

                    b.Navigation("logs_sistema_recientes");

                    b.Navigation("logs_sistemas");

                    b.Navigation("perfiles");

                    b.Navigation("verificaciones");
                });

            modelBuilder.Entity("AgencyPlatform.Infrastructure.Data.Entities.verificacione", b =>
                {
                    b.Navigation("historial_verificaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
